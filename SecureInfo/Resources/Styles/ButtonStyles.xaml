<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ImageBrush x:Key="close_app_def"
                ImageSource="/Resources/Images/close_none.png"
                Stretch="None" />

    <ImageBrush x:Key="close_app_mo"
      
                ImageSource="/Resources/Images/close_act.png"
                Stretch="None" />

    <ImageBrush x:Key="Maximize1"
                ImageSource="/Resources/Images/max_none.png"
                Stretch="Fill" />

    <ImageBrush x:Key="Maximize2"
      
                ImageSource="/Resources/Images/max_act.png"
                Stretch="Fill" />
    
    
    <ImageBrush x:Key="Minimize1"
                ImageSource="/Resources/Images/subtract_none.png"
                Stretch="Fill" />
    <ImageBrush x:Key="Minimize2"
                ImageSource="/Resources/Images/subtract_act.png"
                Stretch="Fill" />


    <Style x:Key="ExitApp"
           TargetType="{x:Type Button}">


        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <!--<Setter Property="Margin"
                Value="0,15,15,0" />-->

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_app_def}">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style x:Key="MinimizeWindowStyle"
           TargetType="{x:Type Button}">


        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="35" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource Minimize1}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Minimize2}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Minimize2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MaximizeWindowStyle"
           TargetType="{x:Type Button}">


        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource Maximize1}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Maximize2}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Maximize2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#29B0CE"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#088AA8"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#29B0CE"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#88C9D7"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#88C9D7"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>